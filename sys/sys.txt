{#ifndef __SYS_TXT__}
{#define __SYS_TXT__}

// note: This program does not fully support Mitsubishi, especially the handling of VAR_IN_OUT parameters in functions.

{#include "sys_config.txt"}

{#if not (_KEYENCE or _MITSUBISHI)}
	{#define DEFINE_CONFIGURATION(var_global_decls) $
		configuration MainConfiguration $
			resource MainResource on MainPLC $
				var_global_decls $
			end $
		end $
	}
{#elif _KEYENCE}
	{#define DEFINE_CONFIGURATION(var_global_decls) $
		configuration MainConfiguration $
			var_global_decls $
		end $
	}
{#elif _MITSUBISHI}
	{#define DEFINE_CONFIGURATION(var_global_decls) $
		configuration MainConfiguration $
			var_global_decls $
		end $
	}
{#endif}

{#define _CONSOLE_ g_console}

{#if not (_KEYENCE or _MITSUBISHI)}
	{#define _DEFINE_SYS_IN_POU_() $
		var_external _CONSOLE_: Console_t; end $
	}
{#else}
	{#define _DEFINE_SYS_IN_POU_() $
	}
{#endif}

{#if not (_KEYENCE or _CODESYS)}
	{#define _PROLOGUE_OF_FUNCTION_FOR_SYS_() $
		var_input  en:  bool; end $
		var_output eno: bool; end $
	}
{#else}
	{#define _PROLOGUE_OF_FUNCTION_FOR_SYS_() $
	}
{#endif}

{#define _PROLOGUE_OF_FUNCTION_() $
	_PROLOGUE_OF_FUNCTION_FOR_SYS_(); $
    _DEFINE_SYS_IN_POU_(); $
}

{#define inc(v) v := (v) + 1}
{#define dec(v) v := (v) - 1}

{#define reset_console() Console_initialize(_CONSOLE_)}
{#define puts(line) Console_puts(_CONSOLE_, line)}
{#define print(text) Console_print(_CONSOLE_, text)}

{#define jiec_concat(...) _jiec_concat_n(__VA_ARGC__, __VA_ARGS__)}
	{#define jiec_concat_0() ''}
	{#define jiec_concat_1(s1) s1}
{#if not (_OMRON or _KEYENCE or _CODESYS)}
	// memo: 1~28 in _MITSUBISHI.
	{#define jiec_concat_2(s1, s2) concat(s1, s2)}
	{#define jiec_concat_3(s1, s2, s3) concat(s1, s2, s3)}
	{#define jiec_concat_4(s1, s2, s3, s4) concat(s1, s2, s3, s4)}
	{#define jiec_concat_5(s1, s2, s3, s4, s5) concat(s1, s2, s3, s4, s5)}
	{#define jiec_concat_6(s1, s2, s3, s4, s5, s6) concat(s1, s2, s3, s4, s5, s6)}
	{#define jiec_concat_7(s1, s2, s3, s4, s5, s6, s7) concat(s1, s2, s3, s4, s5, s6, s7)}
	{#define jiec_concat_8(s1, s2, s3, s4, s5, s6, s7, s8) concat(s1, s2, s3, s4, s5, s6, s7, s8)}
	{#define jiec_concat_9(s1, s2, s3, s4, s5, s6, s7, s8, s9) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9)}
	{#define jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10)}
	{#define jiec_concat_11(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11)}
	{#define jiec_concat_12(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12)}
	{#define jiec_concat_13(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13)}
	{#define jiec_concat_14(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14)}
	{#define jiec_concat_15(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15)}
	{#define jiec_concat_16(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16)}
{#elif _OMRON}
	// 2~5
	{#define jiec_concat_2(s1, s2) concat(s1, s2)}
	{#define jiec_concat_3(s1, s2, s3) concat(s1, s2, s3)}
	{#define jiec_concat_4(s1, s2, s3, s4) concat(s1, s2, s3, s4)}
	{#define jiec_concat_5(s1, s2, s3, s4, s5) concat(s1, s2, s3, s4, s5)}
	{#define jiec_concat_6(s1, s2, s3, s4, s5, s6) concat(jiec_concat_5(s1, s2, s3, s4, s5), s6)}
	{#define jiec_concat_7(s1, s2, s3, s4, s5, s6, s7) concat(jiec_concat_5(s1, s2, s3, s4, s5), s6, s7)}
	{#define jiec_concat_8(s1, s2, s3, s4, s5, s6, s7, s8) concat(jiec_concat_5(s1, s2, s3, s4, s5), s6, s7, s8)}
	{#define jiec_concat_9(s1, s2, s3, s4, s5, s6, s7, s8, s9) concat(jiec_concat_5(s1, s2, s3, s4, s5), s6, s7, s8, s9)}
	{#define jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) concat(jiec_concat_9(s1, s2, s3, s4, s5, s6, s7, s8, s9), s10)}
	{#define jiec_concat_11(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11) concat(jiec_concat_9(s1, s2, s3, s4, s5, s6, s7, s8, s9), s10, s11)}
	{#define jiec_concat_12(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12) concat(jiec_concat_9(s1, s2, s3, s4, s5, s6, s7, s8, s9), s10, s11, s12)}
	{#define jiec_concat_13(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13) concat(jiec_concat_9(s1, s2, s3, s4, s5, s6, s7, s8, s9), s10, s11, s12, s13)}
	{#define jiec_concat_14(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14) concat(jiec_concat_13(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13), s14)}
	{#define jiec_concat_15(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15) concat(jiec_concat_13(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13), s14, s15)}
	{#define jiec_concat_16(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16) concat(jiec_concat_13(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13), s14, s15, s16)}
{#elif _KEYENCE}
	// 2~10
	{#define jiec_concat_2(s1, s2) concat(s1, s2)}
	{#define jiec_concat_3(s1, s2, s3) concat(s1, s2, s3)}
	{#define jiec_concat_4(s1, s2, s3, s4) concat(s1, s2, s3, s4)}
	{#define jiec_concat_5(s1, s2, s3, s4, s5) concat(s1, s2, s3, s4, s5)}
	{#define jiec_concat_6(s1, s2, s3, s4, s5, s6) concat(s1, s2, s3, s4, s5, s6)}
	{#define jiec_concat_7(s1, s2, s3, s4, s5, s6, s7) concat(s1, s2, s3, s4, s5, s6, s7)}
	{#define jiec_concat_8(s1, s2, s3, s4, s5, s6, s7, s8) concat(s1, s2, s3, s4, s5, s6, s7, s8)}
	{#define jiec_concat_9(s1, s2, s3, s4, s5, s6, s7, s8, s9) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9)}
	{#define jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) concat(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10)}
	{#define jiec_concat_11(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11) concat(jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10), s11)}
	{#define jiec_concat_12(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12) concat(jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10), s11, s12)}
	{#define jiec_concat_13(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13) concat(jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10), s11, s12, s13)}
	{#define jiec_concat_14(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14) concat(jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10), s11, s12, s13, s14)}
	{#define jiec_concat_15(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15) concat(jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10), s11, s12, s13, s14, s15)}
	{#define jiec_concat_16(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16) concat(jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10), s11, s12, s13, s14, s15, s16)}
{#elif _CODESYS}
	// 2
	{#define jiec_concat_2(s1, s2) concat(s1, s2)}
	{#define jiec_concat_3(s1, s2, s3) concat(jiec_concat_2(s1, s2), s3)}
	{#define jiec_concat_4(s1, s2, s3, s4) concat(jiec_concat_3(s1, s2, s3), s4)}
	{#define jiec_concat_5(s1, s2, s3, s4, s5) concat(jiec_concat_4(s1, s2, s3, s4), s5)}
	{#define jiec_concat_6(s1, s2, s3, s4, s5, s6) concat(jiec_concat_5(s1, s2, s3, s4, s5), s6)}
	{#define jiec_concat_7(s1, s2, s3, s4, s5, s6, s7) concat(jiec_concat_6(s1, s2, s3, s4, s5, s6), s7)}
	{#define jiec_concat_8(s1, s2, s3, s4, s5, s6, s7, s8) concat(jiec_concat_7(s1, s2, s3, s4, s5, s6, s7), s8)}
	{#define jiec_concat_9(s1, s2, s3, s4, s5, s6, s7, s8, s9) concat(jiec_concat_8(s1, s2, s3, s4, s5, s6, s7, s8), s9)}
	{#define jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) concat(jiec_concat_9(s1, s2, s3, s4, s5, s6, s7, s8, s9), s10)}
	{#define jiec_concat_11(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11) concat(jiec_concat_10(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10), s11)}
	{#define jiec_concat_12(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12) concat(jiec_concat_11(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11), s12)}
	{#define jiec_concat_13(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13) concat(jiec_concat_12(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12), s13)}
	{#define jiec_concat_14(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14) concat(jiec_concat_13(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13), s14)}
	{#define jiec_concat_15(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15) concat(jiec_concat_14(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14), s15)}
	{#define jiec_concat_16(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16) concat(jiec_concat_15(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15), s16)}
{#endif}
	{#define _jiec_concat_n(n, ...) jiec_concat_@@n(__VA_ARGS__)}

type
	{doc: Pseudo console.}
	Console_t: struct
		row_index: dint;
		rows: array[CONSOLE_MAX_ROWS] of string[CONSOLE_MAX_COLS];
	end;
end

function Console_initialize: bool
	_PROLOGUE_OF_FUNCTION_FOR_SYS_();
	var_in_out self: Console_t; end
	var_temp
		row_index: dint;
	end
	{st}
	for row_index := 0 to CONSOLE_MAX_ROWS - 1 do
		self.rows[row_index] := '';
	end_for;
	self.row_index := 0;
	{end}
end

function Console_print: bool
	_PROLOGUE_OF_FUNCTION_FOR_SYS_();
	var_in_out self: Console_t; end
	var_input
		txt: string[STRING_MAX_SIZE];
	end
	{st}
	self.rows[self.row_index] := jiec_concat(self.rows[self.row_index], txt);
	{end}
end

function Console_puts: dint
	_PROLOGUE_OF_FUNCTION_FOR_SYS_();
	var_in_out self: Console_t; end
	var_input
		line: string[STRING_MAX_SIZE];
	end
	{st}
	self.rows[self.row_index] := line;
	self.row_index := (self.row_index + 1) mod CONSOLE_MAX_ROWS;
	Console_puts := self.row_index;
	{end}
end

{#endif}
